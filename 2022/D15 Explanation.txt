I figure I ought to explain my code since it's not easy to ready and is a different approach from Matts.
So we process each row independent of every other row.
Consider that you have only a single beacon and a single sensor.

```
-2 ..........#.................
-1 .........###................
 0 ....S...#####...............
 1 .......#######........S.....
 2 ......#########S............
 3 .....###########SB..........
 4 ....#############...........
 5 ...###############..........
 6 ..#################.........
 7 .#########S#######S#........
 8 ..########X########.........
 9 ...#######X#######..........
10 ....B%%%%%X%%%%%%...........
11 ..S..###########............
12 ......#########.............
13 .......#######..............
14 ........#####.S.......S.....
15 B........###................
16 ..........#SB...............
```

So if you look at my code "dist_to_row" corresnponds to the X's starting from S.
And the range() that I create corresponds to the whole length with the "%".

Pseudocode:
```
For each row:
  For each sensor:
    Create and store a range
  Sort the ranges
  Merge the ranges
  Check for any gaps in the ranges
```
